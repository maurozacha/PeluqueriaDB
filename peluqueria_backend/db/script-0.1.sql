IF NOT EXISTS (SELECT 1 FROM sys.types WHERE name = 'EstadoPago')
CREATE TYPE EstadoPago AS ENUM ('Pendiente', 'Aprobado', 'Rechazado', 'Reembolsado', 'Cancelado');

IF NOT EXISTS (SELECT 1 FROM sys.types WHERE name = 'MetodoPago')
CREATE TYPE MetodoPago AS ENUM ('MercadoPago', 'Efectivo');

CREATE TABLE PAGO (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    RESERVA_ID INT NOT NULL,
    MONTO DECIMAL(10, 2) NOT NULL,
    FECHA_PAGO DATETIME,
    METODO MetodoPago NOT NULL,
    ESTADO EstadoPago NOT NULL DEFAULT 'Pendiente',
    ID_EXTERNO VARCHAR(100), 
    DATOS_PAGO VARCHAR(500), 
    FECHA_ALTA DATETIME DEFAULT GETDATE(),
    USUARIO_ALTA VARCHAR(100),
    FECHA_BAJA DATETIME,
    USUARIO_BAJA VARCHAR(100),
    
    CONSTRAINT FK_PAGO_RESERVA FOREIGN KEY (RESERVA_ID) REFERENCES RESERVA(ID)
);

CREATE INDEX IX_PAGO_ID_EXTERNO ON PAGO(ID_EXTERNO);

IF NOT EXISTS (SELECT 1 FROM sys.columns WHERE name = 'PAGO_ID' AND object_id = OBJECT_ID('RESERVA'))
BEGIN
    ALTER TABLE RESERVA ADD PAGO_ID INT NULL;
    
    ALTER TABLE RESERVA ADD CONSTRAINT FK_RESERVA_PAGO 
    FOREIGN KEY (PAGO_ID) REFERENCES PAGO(ID);
END


CREATE OR ALTER TRIGGER TR_PAGO_UPDATE
ON PAGO
AFTER UPDATE
AS
BEGIN
    UPDATE PAGO
    SET FECHA_ALTA = GETDATE()
    FROM PAGO p
    INNER JOIN inserted i ON p.ID = i.ID
END;